(()=>{let e=[];const t=document.querySelector(".addProject"),n=document.querySelector(".projectModal"),c=document.querySelector("#submitProject"),o=document.querySelector(".projectsContainer"),r=document.querySelector("#newProject"),a=document.querySelector(".projectContent"),l=(document.querySelector(".taskBtn"),document.querySelector(".taskModal")),u=document.querySelector("#submitTask"),d=document.querySelector("#task"),s=document.querySelector(".cancelTask"),i=document.querySelector(".cancelProject"),m=document.querySelector(".taskContainer"),p=(document.querySelector(".deleteProBtn"),(e,t)=>({name:e,projectArray:t})),v=p("inbox",[]);e.push(v);const k=document.createElement("div");k.className="customProject",k.textContent=v.name,o.appendChild(k);let y=document.createElement("div"),h=document.createElement("button");function C(){count=0;for(let t=0;t<e.length;t++){let n=document.createElement("div");n.className="projectDiv",n.innerHTML=`\n            <div class="customProject">${e[t].name}</div>\n            <button id='${count}' class="deleteProBtn"'>Delete</button> \n        `,o.appendChild(n),count+=1}}function j(){for(let t=0;t<e.length;t++){let n=document.querySelector(".projectTitle").textContent;if(e[t].name===n)return e[t].projectArray}}function q(e){e.forEach((e=>{let t=document.createElement("div");t.textContent=e.name,t.className="newTask",m.appendChild(t)}))}y.className="projectTitle",y.textContent=v.name,h.className="taskBtn",h.textContent="New Task",a.appendChild(y),a.appendChild(h),t.addEventListener("click",(()=>{n.showModal()})),c.addEventListener("click",(function(t){t.preventDefault(),o.innerHTML="",function(){let t=document.querySelector("#newProject").value;const n=p(t,[]);e.push(n),C()}(),n.close(),r.value=""})),i.addEventListener("click",(e=>{e.preventDefault(),n.close()})),document.addEventListener("click",(e=>{e.target.matches(".customProject")&&(a.innerHTML="",m.innerHTML="",function(e){let t=document.createElement("div"),n=document.createElement("button");t.className="projectTitle",t.textContent=e,n.className="taskBtn",n.textContent="New Task",a.appendChild(t),a.appendChild(n)}(e.target.textContent),q(j()))})),document.addEventListener("click",(e=>{e.target.matches(".taskBtn")&&l.showModal()})),u.addEventListener("click",(function(e){e.preventDefault(),m.innerHTML="",function(e){const t={name:document.querySelector("#task").value};e.push(t),q(j())}(j()),l.close(),d.value=""})),s.addEventListener("click",(e=>{e.preventDefault(),l.close()})),document.addEventListener("click",(t=>{var n;t.target.matches(".deleteProBtn")&&(n=t.target.id,e.splice(n,1),o.innerHTML="",C())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,